# -*- coding: utf-8 -*-
"""airprobesubmit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12rSrJl3Dw6gEcGq5_Ge41AqIfckoMa07
"""

!pip3 install pandas
!pip3 install xlsxwriter
!pip3 install xlrd
!pip3 install openpyxl
!pip3 install Pillow
!pip3 install cv2



from google.colab import drive

drive.mount('/content/gdrive', force_remount=True)

import PIL
from PIL import Image
from PIL.ExifTags import TAGS, GPSTAGS
from openpyxl import Workbook, load_workbook
import os.path
import cv2
import openpyxl
import os
import json

# image = "/content/gdrive/MyDrive/image_setairprobe/DSCN0010_21.jpg"
# # read the image data using PIL
# image = Image.open(image)

# # extract EXIF data
# exifdata = image.getexif()

# # iterating over all EXIF data fields
# for tag_id in exifdata:
#     # get the tag name, instead of human unreadable tag id
#     tag = TAGS.get(tag_id, tag_id)
#     data = exifdata.get(tag_id)
#     # decode bytes 
#     if isinstance(data, bytes):
#         data = data.decode()
        
#     print(f"{tag:25}: {data}")

# exif = {}
# markers = ['GPSLatitudeRef', 'GPSLatitude', 'GPSLongitudeRef', 'GPSLongitude', 'DateTime', 'FocalLength' , 'ISOSpeedRatings' ]
# format = ['DateTime', ]
# for tag, value in exifdata.items():
#   decoded = TAGS.get(tag, tag)
#   exif[decoded] = value
# gps = {}

# for key in exif['GPSInfo'].keys():
#   decode = GPSTAGS.get(key,key)
#   gps[decode] = exif['GPSInfo'][key]

# final = {'TimeStamp':exif['DateTime'],
#          'Latitude':gps['GPSLatitude'] ,
#          'Longitude':gps['GPSLongitude'] ,
#          'FocalLength':exif['FocalLength'],
#          'ISO': exif['ISOSpeedRatings']}

# print(exif)
# print(final)
# print(gps)

# print(len(gps['GPSLatitude']))
# dec = gps['GPSLatitude'][0][0] + gps['GPSLatitude'][1][0]/60 + gps['GPSLatitude'][2][0]/3600
# print(str(dec))

#Convert latitude and longitude to decimal 
def convert2dec(a):
  if len(a) == 3:
    dec = a[0][0] + a[1][0]/60 + a[2][0]/3600
  elif len(a)==2:
    dec = a[0][0] + a[1][0]/60
  else:
    dec = a[0][0]
  return str(dec)

def meta(filepath):
  image = filepath
  # read the image data using PIL
  image = Image.open(image)
  # creating temporary dicts to hold categorically relevant data
  exif = {}
  gps = {}
  # extract EXIF data
  exifdata = image.getexif()
  if exifdata:
    for tag, value in exifdata.items():
      decoded = TAGS.get(tag, tag)
      exif[decoded] = value
    

    for key in exif['GPSInfo'].keys():
      decode = GPSTAGS.get(key,key)
      gps[decode] = exif['GPSInfo'][key]
  
  
    #Build final dict 
  
    final = {'TimeStamp':exif['DateTime'],
         'Latitude':convert2dec(gps['GPSLatitude'])+' '+gps['GPSLatitudeRef'] ,
         'Longitude':convert2dec(gps['GPSLongitude'])+' '+gps['GPSLongitudeRef'] ,
         'FocalLength':str(exif['FocalLength'][0]/1000) +' '+'mm',
         'ISO': exif['ISOSpeedRatings']}
    return final
  else:
      return ('No metadata found!')

metadata = meta("/content/gdrive/MyDrive/image_setairprobe/DSCN0010_21.jpg")
print(metadata)

def create_meta(folder, sheetname):
  targetfile = os.path.join(folder,sheetname)
  #initialise openpyxl workbook instance
  workbook = Workbook()
  sheet = workbook.active
  sheet['A1'] = 'Imagename'
  sheet['B1'] = 'Resized Image'
  sheet['C1'] = 'Rotated Image'
  sheet['D1'] = 'Metadata info'
  dir = os.listdir(folder)
  if len(dir)!= 0:
    i = 2
    for filename in os.listdir(folder):
      if filename.endswith('.jpg'):
        filepath = os.path.join(folder, filename)
        #read image using opencv
        img = cv2.imread(filepath)
        
        #resize and save temporary copies
        img_resized = cv2.resize(img,(512,512))
        cv2.imwrite(os.path.join(folder, 'resized' + filename), img_resized) 
        resize_loc = os.path.join(folder, 'resized' + filename)
        temp_img1 = openpyxl.drawing.image.Image(resize_loc)
        
        #Rotate and save temporary copies
        img_rotate = cv2.rotate(img_resized, cv2.cv2.ROTATE_90_CLOCKWISE)
        cv2.imwrite(os.path.join(folder, 'rotated' + filename), img_rotate) 
        rotate_loc = os.path.join(folder,'rotated' + filename )
        temp_img2 = openpyxl.drawing.image.Image(rotate_loc)
        
        metadata = meta(filepath)
        
        #adding data to the excel
        sheet[f'A{i}'] = filepath.split('/')[-1]
        sheet.add_image(temp_img1,f'B{i}')
        sheet.add_image(temp_img2,f'C{i}')
        sheet[f'D{i}'] = json.dumps(metadata)
        i=i+1
        

      else:
        continue
    workbook.save(filename=targetfile)

  else:
    return('Directory is empty')

  return ('Meta created')

def clear(folder):
  for filename in os.listdir(folder):
    if filename.startswith('rotated') or filename.startswith('resized'):
      os.remove(os.path.join(folder,filename))
      continue
  return ("Temporary copies removed")

def create_metasheet(folder, sheetname):
  create_meta(folder, sheetname)
  clear(folder)
  return ('Operations complete')

create_metasheet("/content/gdrive/MyDrive/image_setairprobe","meta.xlsx")